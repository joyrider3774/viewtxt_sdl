# Controls when the workflow will run
on:
  # Allows you to run this workflow manually target the Actions tab
  workflow_dispatch:

env:
  GAME_NAME: viewtxt
  GAME_SYS: funkey-s

name: Build funkey-s
jobs:
  build:
    runs-on: ubuntu-latest    
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3
          
      - name: setup funkey SDK
        run: |
          wget https://github.com/DrUm78/FunKey-OS/releases/download/FunKey-OS-DrUm78/FunKey-sdk-2.3.0.tar.gz
          tar -xzvf ./FunKey-sdk-2.3.0.tar.gz
          cd FunKey-sdk-2.3.0
          ./relocate-sdk.sh
       
      - name: Build Game
        run: |
          export TMPPREFIX=FunKey-sdk-2.3.0/arm-funkey-linux-musleabihf/sysroot/usr
          make "TARGET=funkey" "CC=FunKey-sdk-2.3.0/bin/arm-linux-gcc" "PREFIX=$TMPPREFIX"
      
      - name: package opk
        env:
          GAME_NAME: ${{env.GAME_NAME}}
          GAME_SYS: ${{env.GAME_SYS}}
        run: |
          mkdir -p opk
          cp viewtxt opk/viewtxt
          cp meta/viewtxt.png opk/viewtxt.png
          cp meta/viewtxt.funkey-s.desktop opk/viewtxt.funkey-s.desktop
          cp -r fonts opk/fonts

          mksquashfs ./opk $GAME_NAME.opk -all-root -noappend -no-exports -no-xattrs
     
      - name: package meta
        env:
          GAME_NAME: ${{env.GAME_NAME}}
          GAME_SYS: ${{env.GAME_SYS}}
        run: |
          mkdir -p "metarelease/retrofe files"
          cp ./viewtxt
          cp -r "meta/retrofe files" "metarelease/retrofe files"
          cp "meta/viewtxt.svg" "metarelease/viewtxt.svg"
          cp "meta/viewtxt.png" "metarelease/viewtxt.png"
          cp "meta/retrofe_installation.txt" "metarelease/retrofe_installation.txt"
          
      - name: Store build
        uses: actions/upload-artifact@v4
        with:
          name: ${{env.GAME_NAME}}_${{env.GAME_SYS}}
          path: ${{env.GAME_NAME}}.opk
       
      - name: Store Meta
        uses: actions/upload-artifact@v4
        with:
          name: ${{env.GAME_NAME}}_${{env.GAME_SYS}}-MetaFiles
          path: metarelease

