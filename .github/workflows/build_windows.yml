# Controls when the workflow will run
on:
  # Allows you to run this workflow manually target the Actions tab
  workflow_dispatch:

name: Build Windows
jobs:
  build:
    strategy:
      matrix:
        include:
          - { sys: mingw64, env: x86_64, name: viewtxt }
          - { sys: mingw32, env: i686,   name: viewtxt }
          
    runs-on: windows-latest    
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3

      - name: Setup Msys
        uses: msys2/setup-msys2@v2
        with:
          msystem: ${{matrix.sys}}
          install: >-
            base-devel
            mingw-w64-${{matrix.env}}-gcc
            mingw-w64-${{matrix.env}}-SDL             
            mingw-w64-${{matrix.env}}-SDL_ttf
            mingw-w64-${{matrix.env}}-make
            mingw-w64-${{matrix.env}}-harfbuzz
            mingw-w64-${{matrix.env}}-freetype

      - name: Build Game
        shell: msys2 {0}
        run: |
          make "EXE=\"${{matrix.name}}.exe\"" "PREFIX=/${{matrix.sys}}" "CCFLAGS=-I/${{matrix.sys}}/include -I/${{matrix.sys}}/include/SDL -D_GNU_SOURCE=1 -Dmain=SDL_main" "LDFLAGS=-L/${{matrix.sys}}/lib -lmingw32 -lSDLmain -lSDL_ttf -lSDL -mwindows -lm"

      - name: Copy Game And Assets
        shell: msys2 {0}
        run: |
          mkdir ./Release
          mkdir "./Release/${{matrix.name}}"
          cp "${{matrix.name}}.exe" "./Release/${{matrix.name}}/"
          cp ./README.md "./Release/${{matrix.name}}/"
          cp ./LICENSE "./Release/${{matrix.name}}/LICENSE.txt"
          cp -r fonts "./Release/${{matrix.name}}/fonts"

      - name: Copy dll libraries
        shell: msys2 {0}
        run: |
          cp /${{matrix.sys}}/bin/libbz*.dll "./Release/${{matrix.name}}/"
          cp /${{matrix.sys}}/bin/libdeflate*.dll "./Release/${{matrix.name}}/"
          cp /${{matrix.sys}}/bin/libfreetype*.dll "./Release/${{matrix.name}}/"
          cp /${{matrix.sys}}/bin/libgcc*.dll "./Release/${{matrix.name}}/"
          cp /${{matrix.sys}}/bin/libglib*.dll "./Release/${{matrix.name}}/"
          cp /${{matrix.sys}}/bin/libgraphite*.dll "./Release/${{matrix.name}}/"
          cp /${{matrix.sys}}/bin/libharfbuzz*.dll "./Release/${{matrix.name}}/"
          cp /${{matrix.sys}}/bin/libiconv*.dll "./Release/${{matrix.name}}/"
          cp /${{matrix.sys}}/bin/libintl*.dll "./Release/${{matrix.name}}/"
          cp /${{matrix.sys}}/bin/libLerc*.dll "./Release/${{matrix.name}}/"
          cp /${{matrix.sys}}/bin/liblzma*.dll "./Release/${{matrix.name}}/"
          cp /${{matrix.sys}}/bin/zlib*.dll "./Release/${{matrix.name}}/"
          cp /${{matrix.sys}}/bin/libSDL*.dll "./Release/${{matrix.name}}/"
          cp /${{matrix.sys}}/bin/SDL*.dll "./Release/${{matrix.name}}/"
          cp /${{matrix.sys}}/bin/libwinpthread*.dll "./Release/${{matrix.name}}/"
          cp /${{matrix.sys}}/bin/libsharpyuv*.dll "./Release/${{matrix.name}}/"

      - name: Store build
        uses: actions/upload-artifact@v4
        with:
          name: ${{matrix.name}} ${{ matrix.env }}
          path: ./Release/
